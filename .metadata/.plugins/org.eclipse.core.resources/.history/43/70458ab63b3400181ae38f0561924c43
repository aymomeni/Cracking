package chapter1;

import java.util.HashMap;

/**
 * Implement a method to perform basic string compression using
 * the counts of repeated characters. E.g. the string aabcccccaaa would become
 * a2b1c5a3 if the compressed string would not become smaller than the original string your method
 * should return the original string. You can assume the string has only uppercase and lower case 
 * letters (a-z)
 * @author Momeni
 *
 */
public class StringCompression {

	public String stringCompress(String s){
		
		String[] charCountArr = new String[s.length()*2];
		char[] inputCharArr = s.toCharArray();
		
		for(int i = 0; i < inputCharArr.length; i++){
			char curr = inputCharArr[i];
			int count = 1;
			
			for(int j = i + 1; j < inputCharArr.length; j++){
				
				if(curr == inputCharArr[j]) {
					count++;
				} else {
					charCountArr[i] = ""+curr;
					charCountArr[i+1] = ""+count;
				}
			}
			
		}
				
		return charCountArr.toString();
	}
}
